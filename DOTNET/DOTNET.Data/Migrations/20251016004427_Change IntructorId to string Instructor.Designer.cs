// <auto-generated />
using System;
using DOTNET.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOTNET.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251016004427_Change IntructorId to string Instructor")]
    partial class ChangeIntructorIdtostringInstructor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DOTNET.Lib.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<string>("Instructor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Credit = 3,
                            Title = "Introduction to Programming"
                        },
                        new
                        {
                            Id = 2,
                            Credit = 4,
                            Title = "Database Systems"
                        },
                        new
                        {
                            Id = 3,
                            Credit = 3,
                            Title = "Web Development"
                        },
                        new
                        {
                            Id = 4,
                            Credit = 4,
                            Title = "Data Structures and Algorithms"
                        },
                        new
                        {
                            Id = 5,
                            Credit = 3,
                            Title = "Software Engineering"
                        });
                });

            modelBuilder.Entity("DOTNET.Lib.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseID = 1,
                            Grade = 0,
                            StudentID = 2
                        },
                        new
                        {
                            Id = 2,
                            CourseID = 2,
                            Grade = 1,
                            StudentID = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseID = 2,
                            Grade = 2,
                            StudentID = 1
                        },
                        new
                        {
                            Id = 4,
                            CourseID = 1,
                            Grade = 0,
                            StudentID = 2
                        });
                });

            modelBuilder.Entity("DOTNET.Lib.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Initials")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(2025, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Agatha",
                            Gender = 0,
                            Initials = "R",
                            LastName = "John",
                            PhotoPath = "AghathaRJohnbull.jpg"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(2025, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Andrew",
                            Gender = 0,
                            Initials = "B",
                            LastName = "Johnson",
                            PhotoPath = "AndrewBJohnson.jpg"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Beauty",
                            Gender = 0,
                            Initials = "U",
                            LastName = "Karthryn",
                            PhotoPath = "BeautyUKartryn.jpg"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Clement",
                            Gender = 0,
                            Initials = "T",
                            LastName = "Chukwu",
                            PhotoPath = "ClementTChukwu.jpg"
                        },
                        new
                        {
                            Id = 6,
                            EnrollmentDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            Gender = 0,
                            Initials = "Y",
                            LastName = "Harriman",
                            PhotoPath = "JaneYHarriman.jpg"
                        },
                        new
                        {
                            Id = 7,
                            EnrollmentDate = new DateTime(2025, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Josephine",
                            Gender = 0,
                            Initials = "T",
                            LastName = "Aliu",
                            PhotoPath = "JosephineTAliu.jpg"
                        });
                });

            modelBuilder.Entity("DOTNET.Lib.Models.Enrollment", b =>
                {
                    b.HasOne("DOTNET.Lib.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTNET.Lib.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DOTNET.Lib.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("DOTNET.Lib.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
